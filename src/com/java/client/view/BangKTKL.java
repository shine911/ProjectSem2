/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.java.client.view;

import com.java.config.LookConfig;
import com.java.model.KTKL;
import com.java.model.Nhanvien;
import com.java.model.dao.KTKLDAO;
import java.util.SortedMap;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MR.K
 */
public class BangKTKL extends javax.swing.JFrame {

    private static BangKTKL obj = null;
    public static SortedMap<String, KTKL> danhSachKTKL;

    /**
     * Creates new form khenthuong_kyluat
     */
    public BangKTKL() {
        initComponents();
        Nhanvien nv = QuanLiNhanSu.danhSachNhanVien.get(QuanLiNhanSu.username);
        if (nv.getMaCv().equals("MGL")) {
            this.PaneDList.remove(this.DList);
            this.PaneDList.remove(this.RList);
        } else if (nv.getMaCv().equals("MGH")) {
            this.PaneDList.remove(this.DTable);
            this.PaneDList.remove(this.RTable);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PaneDList = new javax.swing.JTabbedPane();
        RTable = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rTable = new javax.swing.JTable();
        rTableAdd = new javax.swing.JButton();
        rTableEdit = new javax.swing.JButton();
        rTableDel = new javax.swing.JButton();
        DTable = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dTable = new javax.swing.JTable();
        dEdit = new javax.swing.JButton();
        dDel = new javax.swing.JButton();
        RList = new javax.swing.JPanel();
        TitleTableLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        rListTable = new javax.swing.JTable();
        rListDel = new javax.swing.JButton();
        rListEdit = new javax.swing.JButton();
        rListAdd = new javax.swing.JButton();
        DList = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dListTable = new javax.swing.JTable();
        dListDel = new javax.swing.JButton();
        dListEdit = new javax.swing.JButton();
        dListAdd = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reward table-discipline");

        jLabel1.setText("Reward table");

        rTable.setModel(this.bangKT());
        rTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(rTable);

        rTableAdd.setText("Add");
        rTableAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rTableAddActionPerformed(evt);
            }
        });

        rTableEdit.setText("Edit");
        rTableEdit.setEnabled(false);
        rTableEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rTableEditActionPerformed(evt);
            }
        });

        rTableDel.setText("Delete");
        rTableDel.setEnabled(false);
        rTableDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rTableDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RTableLayout = new javax.swing.GroupLayout(RTable);
        RTable.setLayout(RTableLayout);
        RTableLayout.setHorizontalGroup(
            RTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
            .addGroup(RTableLayout.createSequentialGroup()
                .addComponent(rTableAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rTableEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rTableDel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(RTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RTableLayout.setVerticalGroup(
            RTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RTableLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rTableAdd)
                    .addComponent(rTableEdit)
                    .addComponent(rTableDel))
                .addContainerGap())
        );

        PaneDList.addTab("Reward table", RTable);

        jLabel2.setText("Discipline table");

        dAdd.setText("Add");
        dAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dAddActionPerformed(evt);
            }
        });

        dTable.setModel(this.bangKL());
        dTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(dTable);

        dEdit.setText("Edit");
        dEdit.setEnabled(false);
        dEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dEditActionPerformed(evt);
            }
        });

        dDel.setText("Delete");
        dDel.setEnabled(false);
        dDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DTableLayout = new javax.swing.GroupLayout(DTable);
        DTable.setLayout(DTableLayout);
        DTableLayout.setHorizontalGroup(
            DTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
            .addGroup(DTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(DTableLayout.createSequentialGroup()
                .addComponent(dAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dDel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        DTableLayout.setVerticalGroup(
            DTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DTableLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dAdd)
                    .addComponent(dEdit)
                    .addComponent(dDel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PaneDList.addTab("Discipline table", DTable);

        TitleTableLabel.setText("Reward List");

        rListTable.setModel(this.danhSachKT());
        rListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rListTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(rListTable);

        rListDel.setText("Delete");
        rListDel.setEnabled(false);
        rListDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rListDelActionPerformed(evt);
            }
        });

        rListEdit.setText("Edit");
        rListEdit.setEnabled(false);
        rListEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rListEditActionPerformed(evt);
            }
        });

        rListAdd.setText("Add");
        rListAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rListAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RListLayout = new javax.swing.GroupLayout(RList);
        RList.setLayout(RListLayout);
        RListLayout.setHorizontalGroup(
            RListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
            .addGroup(RListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleTableLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(RListLayout.createSequentialGroup()
                .addComponent(rListAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rListEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rListDel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        RListLayout.setVerticalGroup(
            RListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RListLayout.createSequentialGroup()
                .addComponent(TitleTableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rListAdd)
                    .addComponent(rListEdit)
                    .addComponent(rListDel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PaneDList.addTab("Reward List", RList);

        jLabel3.setText("Discipline List");

        dListTable.setModel(this.danhSachKL());
        dListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dListTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(dListTable);

        dListDel.setText("Delete");
        dListDel.setEnabled(false);
        dListDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dListDelActionPerformed(evt);
            }
        });

        dListEdit.setText("Edit");
        dListEdit.setEnabled(false);
        dListEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dListEditActionPerformed(evt);
            }
        });

        dListAdd.setText("Add");
        dListAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dListAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DListLayout = new javax.swing.GroupLayout(DList);
        DList.setLayout(DListLayout);
        DListLayout.setHorizontalGroup(
            DListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
            .addGroup(DListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(DListLayout.createSequentialGroup()
                .addComponent(dListAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dListEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dListDel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        DListLayout.setVerticalGroup(
            DListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DListLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dListAdd)
                    .addComponent(dListEdit)
                    .addComponent(dListDel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PaneDList.addTab("Discipline List", DList);

        jMenu2.setText("Menu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Thoát khỏi hệ thống");
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Tìm kiếm ");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Help");

        jMenuItem7.setText("About");
        jMenu4.add(jMenuItem7);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PaneDList, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PaneDList, javax.swing.GroupLayout.PREFERRED_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rTableAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rTableAddActionPerformed
        // TODO add your handling code here:
        NhapKTKL.callRun(new KTKL("", "", "Reward", 0));
    }//GEN-LAST:event_rTableAddActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void rTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rTableMouseClicked

        // TODO add your handling code here:
        int row = rTable.getSelectedRow();
        if (row != -1) {
            this.BtnEnable(rTableEdit, rTableDel);
        }
    }//GEN-LAST:event_rTableMouseClicked

    private void dTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dTableMouseClicked
        // TODO add your handling code here:
        int row = this.dTable.getSelectedRow();
        if (row != -1) {
            this.BtnEnable(dEdit, dDel);
        }
    }//GEN-LAST:event_dTableMouseClicked

    private void dListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dListTableMouseClicked
        // TODO add your handling code here:
        int row = this.dListTable.getSelectedRow();
        if (row != -1) {
            BtnEnable(dListEdit, dListDel);
        }
    }//GEN-LAST:event_dListTableMouseClicked

    private void dAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dAddActionPerformed
        // TODO add your handling code here:
        NhapKTKL.callRun(new KTKL("", "", "Discipline", 0));
    }//GEN-LAST:event_dAddActionPerformed

    private void rListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rListTableMouseClicked
        // TODO add your handling code here:
        int row = rListTable.getSelectedRow();
        if (row != -1) {
            BtnEnable(rListEdit, rListDel);
        }
    }//GEN-LAST:event_rListTableMouseClicked

    private void rTableEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rTableEditActionPerformed
        // TODO add your handling code here:
        int row = rTable.getSelectedRow();
        String key = rTable.getValueAt(row, 0).toString();
        KTKL ktkl = danhSachKTKL.get(key);
        NhapKTKL.callRun(ktkl);
    }//GEN-LAST:event_rTableEditActionPerformed

    private void rTableDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rTableDelActionPerformed
        // TODO add your handling code here:
        int row = rTable.getSelectedRow();
        String key = rTable.getValueAt(row, 0).toString();
        KTKLDAO.removeKTKL(danhSachKTKL.remove(key));
        ((DefaultTableModel) rTable.getModel()).removeRow(row);
    }//GEN-LAST:event_rTableDelActionPerformed

    private void dEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dEditActionPerformed
        // TODO add your handling code here:
        int row = dTable.getSelectedRow();
        String value = dTable.getValueAt(row, 0).toString();
        KTKL ktkl = danhSachKTKL.get(value);
        NhapKTKL.callRun(ktkl);
    }//GEN-LAST:event_dEditActionPerformed

    private void dDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dDelActionPerformed
        // TODO add your handling code here:
        int row = dTable.getSelectedRow();
        String key = dTable.getValueAt(row, 0).toString();
        KTKLDAO.removeKTKL(danhSachKTKL.remove(key));
        ((DefaultTableModel) dTable.getModel()).removeRow(row);
    }//GEN-LAST:event_dDelActionPerformed

    private void rListAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rListAddActionPerformed
        // TODO add your handling code here:
        NV_KTKL.callRun("Reward", null, null);
    }//GEN-LAST:event_rListAddActionPerformed

    private void dListAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dListAddActionPerformed
        // TODO add your handling code here:
        NV_KTKL.callRun("Discipline", null, null);
    }//GEN-LAST:event_dListAddActionPerformed

    private void rListEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rListEditActionPerformed
        // TODO add your handling code here:
        int row = rListTable.getSelectedRow();
        String keyNV = rListTable.getValueAt(row, 0).toString();
        String keyKTKL = rListTable.getValueAt(row, 2).toString();
        Nhanvien nv = QuanLiNhanSu.danhSachNhanVien.get(keyNV);
        KTKL ktkl = danhSachKTKL.get(keyKTKL);
        NV_KTKL.callRun("Reward", nv, ktkl);
    }//GEN-LAST:event_rListEditActionPerformed

    private void dListEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dListEditActionPerformed
        // TODO add your handling code here:
        int row = dListTable.getSelectedRow();
            String keyNV = dListTable.getValueAt(row, 0).toString();
            String keyKTKL = dListTable.getValueAt(row, 2).toString();
            Nhanvien nv = QuanLiNhanSu.danhSachNhanVien.get(keyNV);
            KTKL ktkl = danhSachKTKL.get(keyKTKL);
            NV_KTKL.callRun("Discipline", nv, ktkl);
    }//GEN-LAST:event_dListEditActionPerformed

    private void rListDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rListDelActionPerformed
        // TODO add your handling code here:
        int row = rListTable.getSelectedRow();
        String keyNV = rListTable.getValueAt(row, 0).toString();
        String keyKTKL = rListTable.getValueAt(row, 2).toString();
        Nhanvien nv = QuanLiNhanSu.danhSachNhanVien.get(keyNV);
        KTKL ktkl = nv.getDanhSachKTKL().remove(keyKTKL);
        KTKLDAO.removeNVKTKL(nv.getMaNv(), ktkl.getMaKTKL());
        ((DefaultTableModel) this.rListTable.getModel()).removeRow(row);
    }//GEN-LAST:event_rListDelActionPerformed

    private void dListDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dListDelActionPerformed
        // TODO add your handling code here:
        int row = dListTable.getSelectedRow();
        String keyNV = dListTable.getValueAt(row, 0).toString();
        String keyKTKL = dListTable.getValueAt(row, 2).toString();
        Nhanvien nv = QuanLiNhanSu.danhSachNhanVien.get(keyNV);
        KTKL ktkl = nv.getDanhSachKTKL().remove(keyKTKL);
        KTKLDAO.removeNVKTKL(nv.getMaNv(), ktkl.getMaKTKL());
        ((DefaultTableModel) this.dListTable.getModel()).removeRow(row);
    }//GEN-LAST:event_dListDelActionPerformed

    private void BtnEnable(JButton edit, JButton Del) {
        edit.setEnabled(true);
        Del.setEnabled(true);
    }

    public DefaultTableModel bangKT() {
        DefaultTableModel model = new DefaultTableModel(new Object[]{"Reward Code", "Name", "Description", "Money"}, 0) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        danhSachKTKL.values().stream()
                .filter(ktkl -> ktkl.getHinhThuc().equals("Reward"))
                .forEachOrdered(ktkl -> model.addRow(new Object[]{ktkl.getMaKTKL(),
            ktkl.getTenKTKL(),
            ktkl.getHinhThuc(),
            ktkl.getSotien(),}));
        return model;
    }

    public DefaultTableModel bangKL() {
        DefaultTableModel model = new DefaultTableModel(new Object[]{"Discipline Code", "Name", "Description", "Money"}, 0) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        danhSachKTKL.values().stream()
                .filter(ktkl -> ktkl.getHinhThuc().equals("Discipline"))
                .forEachOrdered(ktkl -> model.addRow(new Object[]{ktkl.getMaKTKL(),
            ktkl.getTenKTKL(),
            ktkl.getHinhThuc(),
            ktkl.getSotien()
        }));
        return model;
    }

    public DefaultTableModel danhSachKT() {
        DefaultTableModel model = new DefaultTableModel(new Object[]{"ID", "Emp Name", "Reward Code", "Name", "Money"}, 0) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        QuanLiNhanSu.danhSachNhanVien.values()
                .stream()
                .filter(nv -> !(nv.getDanhSachKTKL().isEmpty()))
                .forEach(nv -> {
                    nv.getDanhSachKTKL().values()
                            .stream()
                            .filter(ktkl -> ktkl.getHinhThuc().equals("Reward"))
                            .forEachOrdered(ktkl -> model.addRow(new Object[]{nv.getMaNv(),
                        nv.getTenNv(),
                        ktkl.getMaKTKL(),
                        ktkl.getTenKTKL(),
                        ktkl.getSotien(),}));
                });
        return model;
    }

    public DefaultTableModel danhSachKL() {
        DefaultTableModel model = new DefaultTableModel(new Object[]{"ID", "Emp Name", "Discipline Code", "Name", "Money"}, 0) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        QuanLiNhanSu.danhSachNhanVien.values()
                .stream()
                .filter(nv -> !(nv.getDanhSachKTKL().isEmpty()))
                .forEach(nv -> {
                    nv.getDanhSachKTKL().values()
                            .stream()
                            .filter(ktkl -> ktkl.getHinhThuc().equals("Discipline"))
                            .forEachOrdered(ktkl -> model.addRow(new Object[]{nv.getMaNv(),
                        nv.getTenNv(),
                        ktkl.getMaKTKL(),
                        ktkl.getTenKTKL(),
                        ktkl.getSotien(),}));
                });
        return model;
    }

    public void callUpdate() {
        this.rTable.setModel(this.bangKT());
        this.rListTable.setModel(this.danhSachKT());
        this.dTable.setModel(this.bangKL());
        this.dListTable.setModel(this.danhSachKL());
    }

    /**
     * @param args the command line arguments
     */
    public static BangKTKL callRun() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (LookConfig.LookAndFeel.equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BangKTKL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BangKTKL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BangKTKL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BangKTKL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        if (obj == null) {
            obj = new BangKTKL();
        }
        return obj;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DList;
    private javax.swing.JPanel DTable;
    private javax.swing.JTabbedPane PaneDList;
    private javax.swing.JPanel RList;
    private javax.swing.JPanel RTable;
    private javax.swing.JLabel TitleTableLabel;
    private javax.swing.JButton dAdd;
    private javax.swing.JButton dDel;
    private javax.swing.JButton dEdit;
    private javax.swing.JButton dListAdd;
    private javax.swing.JButton dListDel;
    private javax.swing.JButton dListEdit;
    private javax.swing.JTable dListTable;
    private javax.swing.JTable dTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton rListAdd;
    private javax.swing.JButton rListDel;
    private javax.swing.JButton rListEdit;
    private javax.swing.JTable rListTable;
    private javax.swing.JTable rTable;
    private javax.swing.JButton rTableAdd;
    private javax.swing.JButton rTableDel;
    private javax.swing.JButton rTableEdit;
    // End of variables declaration//GEN-END:variables
}
